services:
  backend:
    build: ./backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/llama_finetune_model:/app/llama_finetune_model
      - static_volume:/app/static
      - ./backend/locale:/app/locale
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    command: gunicorn --bind 0.0.0.0:8000 backend.wsgi:application
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - TZ=Asia/Ho_Chi_Minh

  frontend:
    build: ./frontend
    env_file:
      - .env
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  db:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      retries: 5
  
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  celery_worker_gpu_crawler:
    build: ./backend
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - ./backend/llama_finetune_model:/app/llama_finetune_model
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      - DJANGO_SETTINGS_MODULE=backend.settings
      - LLAMA_MODEL_PATH=/app/llama_finetune_model
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=all
      - TZ=Asia/Ho_Chi_Minh
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - backend
      - redis
    command: celery -A backend.celery worker --loglevel=info -Q gpu_crawler_queue --concurrency=1 --pool=solo

  celery_worker_fast_tasks:
    build: ./backend
    env_file:
      - .env
    volumes:
      - ./backend:/app
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      - DJANGO_SETTINGS_MODULE=backend.settings
      - TZ=Asia/Ho_Chi_Minh
    depends_on:
      - backend
      - redis
    command: celery -A backend.celery worker --loglevel=info -Q fast_tasks_queue,default --concurrency=4

  celery_beat:
    build: ./backend
    env_file:
      - .env
    volumes:
      - ./backend:/app
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      - DJANGO_SETTINGS_MODULE=backend.settings
      - TZ=Asia/Ho_Chi_Minh
    depends_on:
      - backend
      - redis
    command: celery -A backend.celery beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler

volumes:
  pgdata:
  static_volume:
